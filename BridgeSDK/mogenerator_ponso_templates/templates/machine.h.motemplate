//
//  <$managedObjectClassName$>.h
//
//  $Id$
//
// DO NOT EDIT. This file is machine-generated and constantly overwritten.
// Make changes to <$managedObjectClassName$>.h instead.
//


#import <Foundation/Foundation.h>
<$if hasCustomSuperentity$>#import "<$customSuperentity$>.h"<$endif$>
<$if hasAdditionalHeaderFile$>
#import "<$additionalHeaderFileName$>"
<$endif$>

<$checkNonTransientRelationshipCycles $>
<$foreach Relationship noninheritedRelationships do$>@class <$Relationship.destinationEntity.managedObjectClassName$>;
<$endforeach do$>

@protocol _<$managedObjectClassName$>
<$foreach Relationship noninheritedRelationshipsInIDKeyPathTopologicalOrder do$><$if ! Relationship.isTransient$><$if Relationship.userInfo.destinationEntityIDKeyPath $>
- (<$Relationship.destinationEntity.managedObjectClassName$> *)fetch<$Relationship.destinationEntity.name$>ObjectWithIDFor<$Relationship.name.initialCapitalString$>Relationship:(id)objectID;
<$endif$><$endif$><$endforeach do$>
@end


@interface _<$managedObjectClassName$> : <$customSuperentity$>
<$if ! TemplateVar.arc$>
{
	<$foreach Attribute noninheritedAttributes do$><$if Attribute.hasDefinedAttributeType$><$Attribute.objectAttributeType$> _<$Attribute.name$>;<$endif$>
	<$endforeach do$>
	<$foreach Relationship noninheritedRelationships do$>
	<$if Relationship.isToMany$>NSArray *_<$Relationship.name$>;m<$else$><$Relationship.destinationEntity.managedObjectClassName$> *_<$Relationship.name$>;<$endif$>
	<$endforeach do$>
}
<$endif$>

<$foreach Attribute noninheritedAttributes do$>
<$if Attribute.isReadonly$>
<$if TemplateVar.arc$>
<$if Attribute.hasDefinedAttributeType$>@property (nonatomic, strong, readonly) <$Attribute.objectAttributeType$> <$Attribute.name$>;<$endif$>
<$else$>
<$if Attribute.hasDefinedAttributeType$>@property (nonatomic, retain, readonly) <$Attribute.objectAttributeType$> <$Attribute.name$>;<$endif$>
<$endif$>
<$if Attribute.hasScalarAttributeType$>@property (nonatomic, assign, readonly) <$Attribute.scalarAttributeType$> <$Attribute.name$>Value;<$endif$>
<$else$>
<$if TemplateVar.arc$>
<$if Attribute.hasDefinedAttributeType$>@property (nonatomic, strong) <$Attribute.objectAttributeType$> <$Attribute.name$>;<$endif$>
<$else$>
<$if Attribute.hasDefinedAttributeType$>@property (nonatomic, retain) <$Attribute.objectAttributeType$> <$Attribute.name$>;<$endif$>
<$endif$>
<$if Attribute.hasScalarAttributeType$>@property (nonatomic, assign) <$Attribute.scalarAttributeType$> <$Attribute.name$>Value;<$endif$>
<$endif$>
<$endforeach do$>
<$foreach Relationship noninheritedRelationships do$>
<$if Relationship.isToMany$>
<$if TemplateVar.arc$>
@property (nonatomic, strong, readonly) NSArray *<$Relationship.name$>;
<$else$>
@property (nonatomic, retain, readonly) NSArray *<$Relationship.name$>;
<$endif$>
<$else$>
<$if Relationship.isTransient $>@property (nonatomic, assign, readwrite) <$Relationship.destinationEntity.managedObjectClassName$> *<$Relationship.name$>;
<$else$>
<$if TemplateVar.arc$>
@property (nonatomic, strong, readwrite) <$Relationship.destinationEntity.managedObjectClassName$> *<$Relationship.name$>;
<$else$>
@property (nonatomic, retain, readwrite) <$Relationship.destinationEntity.managedObjectClassName$> *<$Relationship.name$>;
<$endif$>
<$endif$>
<$endif$><$endforeach do$>
<$foreach Relationship noninheritedRelationships do$>
<$if Relationship.isToMany$>- (void)add<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectClassName$>*)value_ settingInverse: (BOOL) setInverse;
- (void)add<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectClassName$>*)value_;
- (void)remove<$Relationship.name.initialCapitalString$>Objects;
- (void)remove<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectClassName$>*)value_ settingInverse: (BOOL) setInverse;
- (void)remove<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectClassName$>*)value_;
<$if Relationship.isOrdered$>
- (void)insertObject:(<$Relationship.destinationEntity.managedObjectClassName$>*)value in<$Relationship.name.initialCapitalString$>AtIndex:(NSUInteger)idx;
- (void)removeObjectFrom<$Relationship.name.initialCapitalString$>AtIndex:(NSUInteger)idx;
- (void)insert<$Relationship.name.initialCapitalString$>:(NSArray *)value atIndexes:(NSIndexSet *)indexes;
- (void)remove<$Relationship.name.initialCapitalString$>AtIndexes:(NSIndexSet *)indexes;
- (void)replaceObjectIn<$Relationship.name.initialCapitalString$>AtIndex:(NSUInteger)idx withObject:(<$Relationship.destinationEntity.managedObjectClassName$>*)value;
- (void)replace<$Relationship.name.initialCapitalString$>AtIndexes:(NSIndexSet *)indexes with<$Relationship.name.initialCapitalString$>:(NSArray *)values;
<$endif$>
<$endif$><$endforeach do$>
<$foreach Relationship noninheritedRelationships do$><$if ! Relationship.isToMany$>
- (void) set<$Relationship.name.initialCapitalString$>: (<$Relationship.destinationEntity.managedObjectClassName$>*) <$Relationship.name$>_ settingInverse: (BOOL) setInverse;
<$endif$><$endforeach do$>

@end
